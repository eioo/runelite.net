{"version":3,"sources":["../node_modules/webpack/buildin/module.js","../node_modules/platform/platform.js","../node_modules/ramda/es/internal/_xfind.js","../node_modules/ramda/es/internal/_reduced.js","../node_modules/ramda/es/find.js","../node_modules/ramda/es/prepend.js","../node_modules/ramda/es/internal/_concat.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/s-ago/index.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","global","__WEBPACK_AMD_DEFINE_RESULT__","objectTypes","function","object","root","window","this","freeExports","freeModule","nodeType","freeGlobal","self","maxSafeInteger","Math","pow","reOpera","objectProto","prototype","hasOwnProperty","toString","capitalize","string","String","charAt","toUpperCase","slice","format","trim","test","forOwn","callback","key","call","getClassOf","value","qualify","replace","reduce","array","accumulator","index","length","each","platform","parse","ua","context","isCustomContext","nav","navigator","userAgent","data","isSpecialCasedOS","likeChrome","airRuntimeClass","enviroClass","javaClass","java","phantomClass","rhino","environment","alpha","beta","doc","document","opera","operamini","operaClass","arch","description","prerelease","useFeatures","version","layout","label","pattern","result","guess","RegExp","exec","name","guesses","getName","product","getProduct","manufacturer","getManufacturer","Apple","iPad","iPhone","iPod","Archos","Amazon","Kindle","Kindle Fire","Asus","Transformer","Barnes & Noble","Nook","BlackBerry","PlayBook","Google","Google TV","Nexus","HP","TouchPad","HTC","LG","Microsoft","Xbox","Xbox One","Motorola","Xoom","Nintendo","Wii U","Wii","Nokia","Lumia","Samsung","Galaxy S","Galaxy S2","Galaxy S3","Galaxy S4","Sony","PlayStation","PlayStation Vita","os","10.0","6.4","6.3","6.2","6.1","6.0","5.2","5.1","5.01","5.0","4.0","4.90","split","cleanupOS","getOS","push","unshift","indexOf","parseFloat","property","type","isHostType","lang","System","getProperty","require","join","e","system","process","browser","versions","electron","node","nw","runtime","flash","Capabilities","phantom","major","minor","patch","documentMode","toFixed","appMinorVersion","external","parseInt","architecture","family","cpuClass","undefined","__webpack_require__","_xfind_XFind","XFind","f","xf","found","_xfBase","init","input","x","@@transducer/value","@@transducer/reduced","internal_xfind","_curry2","find","_dispatchable","fn","list","idx","len","__webpack_exports__","prepend_prepend","el","set1","set2","len1","len2","_concat","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","diff","divisor","unit","prev","val","round","__esModule","units","max","date","abs","Date","now","getTime"],"mappings":"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","file":"static/js/79.20e20f83.chunk.js","sourcesContent":["module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","/*!\n * Platform.js <https://mths.be/platform>\n * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>\n * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>\n * Available under MIT license <https://mths.be/mit>\n */\n;\n(function () {\n  'use strict';\n  /** Used to determine if values are of the language type `Object`. */\n\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n  /** Used as a reference to the global object. */\n\n  var root = objectTypes[typeof window] && window || this;\n  /** Backup possible global object. */\n\n  var oldRoot = root;\n  /** Detect free variable `exports`. */\n\n  var freeExports = objectTypes[typeof exports] && exports;\n  /** Detect free variable `module`. */\n\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n  /**\n   * Used as the maximum length of an array-like object.\n   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n   * for more details.\n   */\n\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  /** Regular expression to detect Opera. */\n\n  var reOpera = /\\bOpera/;\n  /** Possible global object. */\n\n  var thisBinding = this;\n  /** Used for native method references. */\n\n  var objectProto = Object.prototype;\n  /** Used to check for own properties of an object. */\n\n  var hasOwnProperty = objectProto.hasOwnProperty;\n  /** Used to resolve the internal `[[Class]]` of values. */\n\n  var toString = objectProto.toString;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Capitalizes a string value.\n   *\n   * @private\n   * @param {string} string The string to capitalize.\n   * @returns {string} The capitalized string.\n   */\n\n  function capitalize(string) {\n    string = String(string);\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  /**\n   * A utility function to clean up the OS name.\n   *\n   * @private\n   * @param {string} os The OS name to clean up.\n   * @param {string} [pattern] A `RegExp` pattern matching the OS name.\n   * @param {string} [label] A label for the OS.\n   */\n\n\n  function cleanupOS(os, pattern, label) {\n    // Platform tokens are defined at:\n    // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx\n    var data = {\n      '10.0': '10',\n      '6.4': '10 Technical Preview',\n      '6.3': '8.1',\n      '6.2': '8',\n      '6.1': 'Server 2008 R2 / 7',\n      '6.0': 'Server 2008 / Vista',\n      '5.2': 'Server 2003 / XP 64-bit',\n      '5.1': 'XP',\n      '5.01': '2000 SP1',\n      '5.0': '2000',\n      '4.0': 'NT',\n      '4.90': 'ME'\n    }; // Detect Windows version from platform tokens.\n\n    if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) && (data = data[/[\\d.]+$/.exec(os)])) {\n      os = 'Windows ' + data;\n    } // Correct character case and cleanup string.\n\n\n    os = String(os);\n\n    if (pattern && label) {\n      os = os.replace(RegExp(pattern, 'i'), label);\n    }\n\n    os = format(os.replace(/ ce$/i, ' CE').replace(/\\bhpw/i, 'web').replace(/\\bMacintosh\\b/, 'Mac OS').replace(/_PowerPC\\b/i, ' OS').replace(/\\b(OS X) [^ \\d]+/i, '$1').replace(/\\bMac (OS X)\\b/, '$1').replace(/\\/(\\d)/, ' $1').replace(/_/g, '.').replace(/(?: BePC|[ .]*fc[ \\d.]+)$/i, '').replace(/\\bx86\\.64\\b/gi, 'x86_64').replace(/\\b(Windows Phone) OS\\b/, '$1').replace(/\\b(Chrome OS \\w+) [\\d.]+\\b/, '$1').split(' on ')[0]);\n    return os;\n  }\n  /**\n   * An iteration utility for arrays and objects.\n   *\n   * @private\n   * @param {Array|Object} object The object to iterate over.\n   * @param {Function} callback The function called per iteration.\n   */\n\n\n  function each(object, callback) {\n    var index = -1,\n        length = object ? object.length : 0;\n\n    if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {\n      while (++index < length) {\n        callback(object[index], index, object);\n      }\n    } else {\n      forOwn(object, callback);\n    }\n  }\n  /**\n   * Trim and conditionally capitalize string values.\n   *\n   * @private\n   * @param {string} string The string to format.\n   * @returns {string} The formatted string.\n   */\n\n\n  function format(string) {\n    string = trim(string);\n    return /^(?:webOS|i(?:OS|P))/.test(string) ? string : capitalize(string);\n  }\n  /**\n   * Iterates over an object's own properties, executing the `callback` for each.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} callback The function executed per own property.\n   */\n\n\n  function forOwn(object, callback) {\n    for (var key in object) {\n      if (hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n  /**\n   * Gets the internal `[[Class]]` of a value.\n   *\n   * @private\n   * @param {*} value The value.\n   * @returns {string} The `[[Class]]`.\n   */\n\n\n  function getClassOf(value) {\n    return value == null ? capitalize(value) : toString.call(value).slice(8, -1);\n  }\n  /**\n   * Host objects can return type values that are different from their actual\n   * data type. The objects we are concerned with usually return non-primitive\n   * types of \"object\", \"function\", or \"unknown\".\n   *\n   * @private\n   * @param {*} object The owner of the property.\n   * @param {string} property The property to check.\n   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.\n   */\n\n\n  function isHostType(object, property) {\n    var type = object != null ? typeof object[property] : 'number';\n    return !/^(?:boolean|number|string|undefined)$/.test(type) && (type == 'object' ? !!object[property] : true);\n  }\n  /**\n   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.\n   *\n   * @private\n   * @param {string} string The string to qualify.\n   * @returns {string} The qualified string.\n   */\n\n\n  function qualify(string) {\n    return String(string).replace(/([ -])(?!$)/g, '$1?');\n  }\n  /**\n   * A bare-bones `Array#reduce` like utility function.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function called per iteration.\n   * @returns {*} The accumulated result.\n   */\n\n\n  function reduce(array, callback) {\n    var accumulator = null;\n    each(array, function (value, index) {\n      accumulator = callback(accumulator, value, index, array);\n    });\n    return accumulator;\n  }\n  /**\n   * Removes leading and trailing whitespace from a string.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} The trimmed string.\n   */\n\n\n  function trim(string) {\n    return String(string).replace(/^ +| +$/g, '');\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a new platform object.\n   *\n   * @memberOf platform\n   * @param {Object|string} [ua=navigator.userAgent] The user agent string or\n   *  context object.\n   * @returns {Object} A platform object.\n   */\n\n\n  function parse(ua) {\n    /** The environment context object. */\n    var context = root;\n    /** Used to flag when a custom context is provided. */\n\n    var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String'; // Juggle arguments.\n\n    if (isCustomContext) {\n      context = ua;\n      ua = null;\n    }\n    /** Browser navigator object. */\n\n\n    var nav = context.navigator || {};\n    /** Browser user agent string. */\n\n    var userAgent = nav.userAgent || '';\n    ua || (ua = userAgent);\n    /** Used to flag when `thisBinding` is the [ModuleScope]. */\n\n    var isModuleScope = isCustomContext || thisBinding == oldRoot;\n    /** Used to detect if browser is like Chrome. */\n\n    var likeChrome = isCustomContext ? !!nav.likeChrome : /\\bChrome\\b/.test(ua) && !/internal|\\n/i.test(toString.toString());\n    /** Internal `[[Class]]` value shortcuts. */\n\n    var objectClass = 'Object',\n        airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',\n        enviroClass = isCustomContext ? objectClass : 'Environment',\n        javaClass = isCustomContext && context.java ? 'JavaPackage' : getClassOf(context.java),\n        phantomClass = isCustomContext ? objectClass : 'RuntimeObject';\n    /** Detect Java environments. */\n\n    var java = /\\bJava/.test(javaClass) && context.java;\n    /** Detect Rhino. */\n\n    var rhino = java && getClassOf(context.environment) == enviroClass;\n    /** A character to represent alpha. */\n\n    var alpha = java ? 'a' : \"\\u03B1\";\n    /** A character to represent beta. */\n\n    var beta = java ? 'b' : \"\\u03B2\";\n    /** Browser document object. */\n\n    var doc = context.document || {};\n    /**\n     * Detect Opera browser (Presto-based).\n     * http://www.howtocreate.co.uk/operaStuff/operaObject.html\n     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini\n     */\n\n    var opera = context.operamini || context.opera;\n    /** Opera `[[Class]]`. */\n\n    var operaClass = reOpera.test(operaClass = isCustomContext && opera ? opera['[[Class]]'] : getClassOf(opera)) ? operaClass : opera = null;\n    /*------------------------------------------------------------------------*/\n\n    /** Temporary variable used over the script's lifetime. */\n\n    var data;\n    /** The CPU architecture. */\n\n    var arch = ua;\n    /** Platform description array. */\n\n    var description = [];\n    /** Platform alpha/beta indicator. */\n\n    var prerelease = null;\n    /** A flag to indicate that environment features should be used to resolve the platform. */\n\n    var useFeatures = ua == userAgent;\n    /** The browser/environment version. */\n\n    var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();\n    /** A flag to indicate if the OS ends with \"/ Version\" */\n\n    var isSpecialCasedOS;\n    /* Detectable layout engines (order is important). */\n\n    var layout = getLayout([{\n      'label': 'EdgeHTML',\n      'pattern': 'Edge'\n    }, 'Trident', {\n      'label': 'WebKit',\n      'pattern': 'AppleWebKit'\n    }, 'iCab', 'Presto', 'NetFront', 'Tasman', 'KHTML', 'Gecko']);\n    /* Detectable browser names (order is important). */\n\n    var name = getName(['Adobe AIR', 'Arora', 'Avant Browser', 'Breach', 'Camino', 'Electron', 'Epiphany', 'Fennec', 'Flock', 'Galeon', 'GreenBrowser', 'iCab', 'Iceweasel', 'K-Meleon', 'Konqueror', 'Lunascape', 'Maxthon', {\n      'label': 'Microsoft Edge',\n      'pattern': 'Edge'\n    }, 'Midori', 'Nook Browser', 'PaleMoon', 'PhantomJS', 'Raven', 'Rekonq', 'RockMelt', {\n      'label': 'Samsung Internet',\n      'pattern': 'SamsungBrowser'\n    }, 'SeaMonkey', {\n      'label': 'Silk',\n      'pattern': '(?:Cloud9|Silk-Accelerated)'\n    }, 'Sleipnir', 'SlimBrowser', {\n      'label': 'SRWare Iron',\n      'pattern': 'Iron'\n    }, 'Sunrise', 'Swiftfox', 'Waterfox', 'WebPositive', 'Opera Mini', {\n      'label': 'Opera Mini',\n      'pattern': 'OPiOS'\n    }, 'Opera', {\n      'label': 'Opera',\n      'pattern': 'OPR'\n    }, 'Chrome', {\n      'label': 'Chrome Mobile',\n      'pattern': '(?:CriOS|CrMo)'\n    }, {\n      'label': 'Firefox',\n      'pattern': '(?:Firefox|Minefield)'\n    }, {\n      'label': 'Firefox for iOS',\n      'pattern': 'FxiOS'\n    }, {\n      'label': 'IE',\n      'pattern': 'IEMobile'\n    }, {\n      'label': 'IE',\n      'pattern': 'MSIE'\n    }, 'Safari']);\n    /* Detectable products (order is important). */\n\n    var product = getProduct([{\n      'label': 'BlackBerry',\n      'pattern': 'BB10'\n    }, 'BlackBerry', {\n      'label': 'Galaxy S',\n      'pattern': 'GT-I9000'\n    }, {\n      'label': 'Galaxy S2',\n      'pattern': 'GT-I9100'\n    }, {\n      'label': 'Galaxy S3',\n      'pattern': 'GT-I9300'\n    }, {\n      'label': 'Galaxy S4',\n      'pattern': 'GT-I9500'\n    }, {\n      'label': 'Galaxy S5',\n      'pattern': 'SM-G900'\n    }, {\n      'label': 'Galaxy S6',\n      'pattern': 'SM-G920'\n    }, {\n      'label': 'Galaxy S6 Edge',\n      'pattern': 'SM-G925'\n    }, {\n      'label': 'Galaxy S7',\n      'pattern': 'SM-G930'\n    }, {\n      'label': 'Galaxy S7 Edge',\n      'pattern': 'SM-G935'\n    }, 'Google TV', 'Lumia', 'iPad', 'iPod', 'iPhone', 'Kindle', {\n      'label': 'Kindle Fire',\n      'pattern': '(?:Cloud9|Silk-Accelerated)'\n    }, 'Nexus', 'Nook', 'PlayBook', 'PlayStation Vita', 'PlayStation', 'TouchPad', 'Transformer', {\n      'label': 'Wii U',\n      'pattern': 'WiiU'\n    }, 'Wii', 'Xbox One', {\n      'label': 'Xbox 360',\n      'pattern': 'Xbox'\n    }, 'Xoom']);\n    /* Detectable manufacturers. */\n\n    var manufacturer = getManufacturer({\n      'Apple': {\n        'iPad': 1,\n        'iPhone': 1,\n        'iPod': 1\n      },\n      'Archos': {},\n      'Amazon': {\n        'Kindle': 1,\n        'Kindle Fire': 1\n      },\n      'Asus': {\n        'Transformer': 1\n      },\n      'Barnes & Noble': {\n        'Nook': 1\n      },\n      'BlackBerry': {\n        'PlayBook': 1\n      },\n      'Google': {\n        'Google TV': 1,\n        'Nexus': 1\n      },\n      'HP': {\n        'TouchPad': 1\n      },\n      'HTC': {},\n      'LG': {},\n      'Microsoft': {\n        'Xbox': 1,\n        'Xbox One': 1\n      },\n      'Motorola': {\n        'Xoom': 1\n      },\n      'Nintendo': {\n        'Wii U': 1,\n        'Wii': 1\n      },\n      'Nokia': {\n        'Lumia': 1\n      },\n      'Samsung': {\n        'Galaxy S': 1,\n        'Galaxy S2': 1,\n        'Galaxy S3': 1,\n        'Galaxy S4': 1\n      },\n      'Sony': {\n        'PlayStation': 1,\n        'PlayStation Vita': 1\n      }\n    });\n    /* Detectable operating systems (order is important). */\n\n    var os = getOS(['Windows Phone', 'Android', 'CentOS', {\n      'label': 'Chrome OS',\n      'pattern': 'CrOS'\n    }, 'Debian', 'Fedora', 'FreeBSD', 'Gentoo', 'Haiku', 'Kubuntu', 'Linux Mint', 'OpenBSD', 'Red Hat', 'SuSE', 'Ubuntu', 'Xubuntu', 'Cygwin', 'Symbian OS', 'hpwOS', 'webOS ', 'webOS', 'Tablet OS', 'Tizen', 'Linux', 'Mac OS X', 'Macintosh', 'Mac', 'Windows 98;', 'Windows ']);\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Picks the layout engine from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected layout engine.\n     */\n\n    function getLayout(guesses) {\n      return reduce(guesses, function (result, guess) {\n        return result || RegExp('\\\\b' + (guess.pattern || qualify(guess)) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n    /**\n     * Picks the manufacturer from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An object of guesses.\n     * @returns {null|string} The detected manufacturer.\n     */\n\n\n    function getManufacturer(guesses) {\n      return reduce(guesses, function (result, value, key) {\n        // Lookup the manufacturer by product or scan the UA for the manufacturer.\n        return result || (value[product] || value[/^[a-z]+(?: +[a-z]+\\b)*/i.exec(product)] || RegExp('\\\\b' + qualify(key) + '(?:\\\\b|\\\\w*\\\\d)', 'i').exec(ua)) && key;\n      });\n    }\n    /**\n     * Picks the browser name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected browser name.\n     */\n\n\n    function getName(guesses) {\n      return reduce(guesses, function (result, guess) {\n        return result || RegExp('\\\\b' + (guess.pattern || qualify(guess)) + '\\\\b', 'i').exec(ua) && (guess.label || guess);\n      });\n    }\n    /**\n     * Picks the OS name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected OS name.\n     */\n\n\n    function getOS(guesses) {\n      return reduce(guesses, function (result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n\n        if (!result && (result = RegExp('\\\\b' + pattern + '(?:/[\\\\d.]+|[ \\\\w.]*)', 'i').exec(ua))) {\n          result = cleanupOS(result, pattern, guess.label || guess);\n        }\n\n        return result;\n      });\n    }\n    /**\n     * Picks the product name from an array of guesses.\n     *\n     * @private\n     * @param {Array} guesses An array of guesses.\n     * @returns {null|string} The detected product name.\n     */\n\n\n    function getProduct(guesses) {\n      return reduce(guesses, function (result, guess) {\n        var pattern = guess.pattern || qualify(guess);\n\n        if (!result && (result = RegExp('\\\\b' + pattern + ' *\\\\d+[.\\\\w_]*', 'i').exec(ua) || RegExp('\\\\b' + pattern + ' *\\\\w+-[\\\\w]*', 'i').exec(ua) || RegExp('\\\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\\\d+|[^ ();-]*)', 'i').exec(ua))) {\n          // Split by forward slash and append product version if needed.\n          if ((result = String(guess.label && !RegExp(pattern, 'i').test(guess.label) ? guess.label : result).split('/'))[1] && !/[\\d.]+/.test(result[0])) {\n            result[0] += ' ' + result[1];\n          } // Correct character case and cleanup string.\n\n\n          guess = guess.label || guess;\n          result = format(result[0].replace(RegExp(pattern, 'i'), guess).replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ').replace(RegExp('(' + guess + ')[-_.]?(\\\\w)', 'i'), '$1 $2'));\n        }\n\n        return result;\n      });\n    }\n    /**\n     * Resolves the version using an array of UA patterns.\n     *\n     * @private\n     * @param {Array} patterns An array of UA patterns.\n     * @returns {null|string} The detected version.\n     */\n\n\n    function getVersion(patterns) {\n      return reduce(patterns, function (result, pattern) {\n        return result || (RegExp(pattern + '(?:-[\\\\d.]+/|(?: for [\\\\w-]+)?[ /-])([\\\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;\n      });\n    }\n    /**\n     * Returns `platform.description` when the platform object is coerced to a string.\n     *\n     * @name toString\n     * @memberOf platform\n     * @returns {string} Returns `platform.description` if available, else an empty string.\n     */\n\n\n    function toStringPlatform() {\n      return this.description || '';\n    }\n    /*------------------------------------------------------------------------*/\n    // Convert layout to an array so we can add extra details.\n\n\n    layout && (layout = [layout]); // Detect product names that contain their manufacturer's name.\n\n    if (manufacturer && !product) {\n      product = getProduct([manufacturer]);\n    } // Clean up Google TV.\n\n\n    if (data = /\\bGoogle TV\\b/.exec(product)) {\n      product = data[0];\n    } // Detect simulators.\n\n\n    if (/\\bSimulator\\b/i.test(ua)) {\n      product = (product ? product + ' ' : '') + 'Simulator';\n    } // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.\n\n\n    if (name == 'Opera Mini' && /\\bOPiOS\\b/.test(ua)) {\n      description.push('running in Turbo/Uncompressed mode');\n    } // Detect IE Mobile 11.\n\n\n    if (name == 'IE' && /\\blike iPhone OS\\b/.test(ua)) {\n      data = parse(ua.replace(/like iPhone OS/, ''));\n      manufacturer = data.manufacturer;\n      product = data.product;\n    } // Detect iOS.\n    else if (/^iP/.test(product)) {\n        name || (name = 'Safari');\n        os = 'iOS' + ((data = / OS ([\\d_]+)/i.exec(ua)) ? ' ' + data[1].replace(/_/g, '.') : '');\n      } // Detect Kubuntu.\n      else if (name == 'Konqueror' && !/buntu/i.test(os)) {\n          os = 'Kubuntu';\n        } // Detect Android browsers.\n        else if (manufacturer && manufacturer != 'Google' && (/Chrome/.test(name) && !/\\bMobile Safari\\b/i.test(ua) || /\\bVita\\b/.test(product)) || /\\bAndroid\\b/.test(os) && /^Chrome/.test(name) && /\\bVersion\\//i.test(ua)) {\n            name = 'Android Browser';\n            os = /\\bAndroid\\b/.test(os) ? os : 'Android';\n          } // Detect Silk desktop/accelerated modes.\n          else if (name == 'Silk') {\n              if (!/\\bMobi/i.test(ua)) {\n                os = 'Android';\n                description.unshift('desktop mode');\n              }\n\n              if (/Accelerated *= *true/i.test(ua)) {\n                description.unshift('accelerated');\n              }\n            } // Detect PaleMoon identifying as Firefox.\n            else if (name == 'PaleMoon' && (data = /\\bFirefox\\/([\\d.]+)\\b/.exec(ua))) {\n                description.push('identifying as Firefox ' + data[1]);\n              } // Detect Firefox OS and products running Firefox.\n              else if (name == 'Firefox' && (data = /\\b(Mobile|Tablet|TV)\\b/i.exec(ua))) {\n                  os || (os = 'Firefox OS');\n                  product || (product = data[1]);\n                } // Detect false positives for Firefox/Safari.\n                else if (!name || (data = !/\\bMinefield\\b/i.test(ua) && /\\b(?:Firefox|Safari)\\b/.exec(name))) {\n                    // Escape the `/` for Firefox 1.\n                    if (name && !product && /[\\/,]|^[^(]+?\\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {\n                      // Clear name of false positives.\n                      name = null;\n                    } // Reassign a generic name.\n\n\n                    if ((data = product || manufacturer || os) && (product || manufacturer || /\\b(?:Android|Symbian OS|Tablet OS|webOS)\\b/.test(os))) {\n                      name = /[a-z]+(?: Hat)?/i.exec(/\\bAndroid\\b/.test(os) ? os : data) + ' Browser';\n                    }\n                  } // Add Chrome version to description for Electron.\n                  else if (name == 'Electron' && (data = (/\\bChrome\\/([\\d.]+)\\b/.exec(ua) || 0)[1])) {\n                      description.push('Chromium ' + data);\n                    } // Detect non-Opera (Presto-based) versions (order is important).\n\n\n    if (!version) {\n      version = getVersion(['(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\\\d.]+$))', 'Version', qualify(name), '(?:Firefox|Minefield|NetFront)']);\n    } // Detect stubborn layout engines.\n\n\n    if (data = layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' || /\\bOpera\\b/.test(name) && (/\\bOPR\\b/.test(ua) ? 'Blink' : 'Presto') || /\\b(?:Midori|Nook|Safari)\\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' || !layout && /\\bMSIE\\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') || layout == 'WebKit' && /\\bPlayStation\\b(?! Vita\\b)/i.test(name) && 'NetFront') {\n      layout = [data];\n    } // Detect Windows Phone 7 desktop mode.\n\n\n    if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\\d+)/i.exec(ua) || 0)[1])) {\n      name += ' Mobile';\n      os = 'Windows Phone ' + (/\\+$/.test(data) ? data : data + '.x');\n      description.unshift('desktop mode');\n    } // Detect Windows Phone 8.x desktop mode.\n    else if (/\\bWPDesktop\\b/i.test(ua)) {\n        name = 'IE Mobile';\n        os = 'Windows Phone 8.x';\n        description.unshift('desktop mode');\n        version || (version = (/\\brv:([\\d.]+)/.exec(ua) || 0)[1]);\n      } // Detect IE 11 identifying as other browsers.\n      else if (name != 'IE' && layout == 'Trident' && (data = /\\brv:([\\d.]+)/.exec(ua))) {\n          if (name) {\n            description.push('identifying as ' + name + (version ? ' ' + version : ''));\n          }\n\n          name = 'IE';\n          version = data[1];\n        } // Leverage environment features.\n\n\n    if (useFeatures) {\n      // Detect server-side environments.\n      // Rhino has a global function while others have a global object.\n      if (isHostType(context, 'global')) {\n        if (java) {\n          data = java.lang.System;\n          arch = data.getProperty('os.arch');\n          os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');\n        }\n\n        if (rhino) {\n          try {\n            version = context.require('ringo/engine').version.join('.');\n            name = 'RingoJS';\n          } catch (e) {\n            if ((data = context.system) && data.global.system == context.system) {\n              name = 'Narwhal';\n              os || (os = data[0].os || null);\n            }\n          }\n\n          if (!name) {\n            name = 'Rhino';\n          }\n        } else if (typeof context.process == 'object' && !context.process.browser && (data = context.process)) {\n          if (typeof data.versions == 'object') {\n            if (typeof data.versions.electron == 'string') {\n              description.push('Node ' + data.versions.node);\n              name = 'Electron';\n              version = data.versions.electron;\n            } else if (typeof data.versions.nw == 'string') {\n              description.push('Chromium ' + version, 'Node ' + data.versions.node);\n              name = 'NW.js';\n              version = data.versions.nw;\n            }\n          }\n\n          if (!name) {\n            name = 'Node.js';\n            arch = data.arch;\n            os = data.platform;\n            version = /[\\d.]+/.exec(data.version);\n            version = version ? version[0] : null;\n          }\n        }\n      } // Detect Adobe AIR.\n      else if (getClassOf(data = context.runtime) == airRuntimeClass) {\n          name = 'Adobe AIR';\n          os = data.flash.system.Capabilities.os;\n        } // Detect PhantomJS.\n        else if (getClassOf(data = context.phantom) == phantomClass) {\n            name = 'PhantomJS';\n            version = (data = data.version || null) && data.major + '.' + data.minor + '.' + data.patch;\n          } // Detect IE compatibility modes.\n          else if (typeof doc.documentMode == 'number' && (data = /\\bTrident\\/(\\d+)/i.exec(ua))) {\n              // We're in compatibility mode when the Trident version + 4 doesn't\n              // equal the document mode.\n              version = [version, doc.documentMode];\n\n              if ((data = +data[1] + 4) != version[1]) {\n                description.push('IE ' + version[1] + ' mode');\n                layout && (layout[1] = '');\n                version[1] = data;\n              }\n\n              version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];\n            } // Detect IE 11 masking as other browsers.\n            else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\\b/.test(name)) {\n                description.push('masking as ' + name + ' ' + version);\n                name = 'IE';\n                version = '11.0';\n                layout = ['Trident'];\n                os = 'Windows';\n              }\n\n      os = os && format(os);\n    } // Detect prerelease phases.\n\n\n    if (version && (data = /(?:[ab]|dp|pre|[ab]\\d+pre)(?:\\d+\\+?)?$/i.exec(version) || /(?:alpha|beta)(?: ?\\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) || /\\bMinefield\\b/i.test(ua) && 'a')) {\n      prerelease = /b/i.test(data) ? 'beta' : 'alpha';\n      version = version.replace(RegExp(data + '\\\\+?$'), '') + (prerelease == 'beta' ? beta : alpha) + (/\\d+\\+?/.exec(data) || '');\n    } // Detect Firefox Mobile.\n\n\n    if (name == 'Fennec' || name == 'Firefox' && /\\b(?:Android|Firefox OS)\\b/.test(os)) {\n      name = 'Firefox Mobile';\n    } // Obscure Maxthon's unreliable version.\n    else if (name == 'Maxthon' && version) {\n        version = version.replace(/\\.[\\d.]+/, '.x');\n      } // Detect Xbox 360 and Xbox One.\n      else if (/\\bXbox\\b/i.test(product)) {\n          if (product == 'Xbox 360') {\n            os = null;\n          }\n\n          if (product == 'Xbox 360' && /\\bIEMobile\\b/.test(ua)) {\n            description.unshift('mobile mode');\n          }\n        } // Add mobile postfix.\n        else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) && (os == 'Windows CE' || /Mobi/i.test(ua))) {\n            name += ' Mobile';\n          } // Detect IE platform preview.\n          else if (name == 'IE' && useFeatures) {\n              try {\n                if (context.external === null) {\n                  description.unshift('platform preview');\n                }\n              } catch (e) {\n                description.unshift('embedded');\n              }\n            } // Detect BlackBerry OS version.\n            // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp\n            else if ((/\\bBlackBerry\\b/.test(product) || /\\bBB10\\b/.test(ua)) && (data = (RegExp(product.replace(/ +/g, ' *') + '/([.\\\\d]+)', 'i').exec(ua) || 0)[1] || version)) {\n                data = [data, /BB10/.test(ua)];\n                os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];\n                version = null;\n              } // Detect Opera identifying/masking itself as another browser.\n              // http://www.opera.com/support/kb/view/843/\n              else if (this != forOwn && product != 'Wii' && (useFeatures && opera || /Opera/.test(name) && /\\b(?:MSIE|Firefox)\\b/i.test(ua) || name == 'Firefox' && /\\bOS X (?:\\d+\\.){2,}/.test(os) || name == 'IE' && (os && !/^Win/.test(os) && version > 5.5 || /\\bWindows XP\\b/.test(os) && version > 8 || version == 8 && !/\\bTrident\\b/.test(ua))) && !reOpera.test(data = parse.call(forOwn, ua.replace(reOpera, '') + ';')) && data.name) {\n                  // When \"identifying\", the UA contains both Opera and the other browser's name.\n                  data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');\n\n                  if (reOpera.test(name)) {\n                    if (/\\bIE\\b/.test(data) && os == 'Mac OS') {\n                      os = null;\n                    }\n\n                    data = 'identify' + data;\n                  } // When \"masking\", the UA contains only the other browser's name.\n                  else {\n                      data = 'mask' + data;\n\n                      if (operaClass) {\n                        name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));\n                      } else {\n                        name = 'Opera';\n                      }\n\n                      if (/\\bIE\\b/.test(data)) {\n                        os = null;\n                      }\n\n                      if (!useFeatures) {\n                        version = null;\n                      }\n                    }\n\n                  layout = ['Presto'];\n                  description.push(data);\n                } // Detect WebKit Nightly and approximate Chrome/Safari versions.\n\n\n    if (data = (/\\bAppleWebKit\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1]) {\n      // Correct build number for numeric comparison.\n      // (e.g. \"532.5\" becomes \"532.05\")\n      data = [parseFloat(data.replace(/\\.(\\d)$/, '.0$1')), data]; // Nightly builds are postfixed with a \"+\".\n\n      if (name == 'Safari' && data[1].slice(-1) == '+') {\n        name = 'WebKit Nightly';\n        prerelease = 'alpha';\n        version = data[1].slice(0, -1);\n      } // Clear incorrect browser versions.\n      else if (version == data[1] || version == (data[2] = (/\\bSafari\\/([\\d.]+\\+?)/i.exec(ua) || 0)[1])) {\n          version = null;\n        } // Use the full Chrome version when available.\n\n\n      data[1] = (/\\bChrome\\/([\\d.]+)/i.exec(ua) || 0)[1]; // Detect Blink layout engine.\n\n      if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {\n        layout = ['Blink'];\n      } // Detect JavaScriptCore.\n      // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi\n\n\n      if (!useFeatures || !likeChrome && !data[1]) {\n        layout && (layout[1] = 'like Safari');\n        data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');\n      } else {\n        layout && (layout[1] = 'like Chrome');\n        data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');\n      } // Add the postfix of \".x\" or \"+\" for approximate versions.\n\n\n      layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+')); // Obscure version for some Safari 1-2 releases.\n\n      if (name == 'Safari' && (!version || parseInt(version) > 45)) {\n        version = data;\n      }\n    } // Detect Opera desktop modes.\n\n\n    if (name == 'Opera' && (data = /\\bzbov|zvav$/.exec(os))) {\n      name += ' ';\n      description.unshift('desktop mode');\n\n      if (data == 'zvav') {\n        name += 'Mini';\n        version = null;\n      } else {\n        name += 'Mobile';\n      }\n\n      os = os.replace(RegExp(' *' + data + '$'), '');\n    } // Detect Chrome desktop mode.\n    else if (name == 'Safari' && /\\bChrome\\b/.exec(layout && layout[1])) {\n        description.unshift('desktop mode');\n        name = 'Chrome Mobile';\n        version = null;\n\n        if (/\\bOS X\\b/.test(os)) {\n          manufacturer = 'Apple';\n          os = 'iOS 4.3+';\n        } else {\n          os = null;\n        }\n      } // Strip incorrect OS versions.\n\n\n    if (version && version.indexOf(data = /[\\d.]+$/.exec(os)) == 0 && ua.indexOf('/' + data + '-') > -1) {\n      os = trim(os.replace(data, ''));\n    } // Add layout engine.\n\n\n    if (layout && !/\\b(?:Avant|Nook)\\b/.test(name) && (/Browser|Lunascape|Maxthon/.test(name) || name != 'Safari' && /^iOS/.test(os) && /\\bSafari\\b/.test(layout[1]) || /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(name) && layout[1])) {\n      // Don't add layout details to description if they are falsey.\n      (data = layout[layout.length - 1]) && description.push(data);\n    } // Combine contextual information.\n\n\n    if (description.length) {\n      description = ['(' + description.join('; ') + ')'];\n    } // Append manufacturer to description.\n\n\n    if (manufacturer && product && product.indexOf(manufacturer) < 0) {\n      description.push('on ' + manufacturer);\n    } // Append product to description.\n\n\n    if (product) {\n      description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);\n    } // Parse the OS into an object.\n\n\n    if (os) {\n      data = / ([\\d.+]+)$/.exec(os);\n      isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';\n      os = {\n        'architecture': 32,\n        'family': data && !isSpecialCasedOS ? os.replace(data[0], '') : os,\n        'version': data ? data[1] : null,\n        'toString': function toString() {\n          var version = this.version;\n          return this.family + (version && !isSpecialCasedOS ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');\n        }\n      };\n    } // Add browser/OS architecture.\n\n\n    if ((data = /\\b(?:AMD|IA|Win|WOW|x86_|x)64\\b/i.exec(arch)) && !/\\bi686\\b/i.test(arch)) {\n      if (os) {\n        os.architecture = 64;\n        os.family = os.family.replace(RegExp(' *' + data), '');\n      }\n\n      if (name && (/\\bWOW64\\b/i.test(ua) || useFeatures && /\\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\\bWin64; x64\\b/i.test(ua))) {\n        description.unshift('32-bit');\n      }\n    } // Chrome 39 and above on OS X is always 64-bit.\n    else if (os && /^OS X/.test(os.family) && name == 'Chrome' && parseFloat(version) >= 39) {\n        os.architecture = 64;\n      }\n\n    ua || (ua = null);\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The platform object.\n     *\n     * @name platform\n     * @type Object\n     */\n\n    var platform = {};\n    /**\n     * The platform description.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.description = ua;\n    /**\n     * The name of the browser's layout engine.\n     *\n     * The list of common layout engines include:\n     * \"Blink\", \"EdgeHTML\", \"Gecko\", \"Trident\" and \"WebKit\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.layout = layout && layout[0];\n    /**\n     * The name of the product's manufacturer.\n     *\n     * The list of manufacturers include:\n     * \"Apple\", \"Archos\", \"Amazon\", \"Asus\", \"Barnes & Noble\", \"BlackBerry\",\n     * \"Google\", \"HP\", \"HTC\", \"LG\", \"Microsoft\", \"Motorola\", \"Nintendo\",\n     * \"Nokia\", \"Samsung\" and \"Sony\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.manufacturer = manufacturer;\n    /**\n     * The name of the browser/environment.\n     *\n     * The list of common browser names include:\n     * \"Chrome\", \"Electron\", \"Firefox\", \"Firefox for iOS\", \"IE\",\n     * \"Microsoft Edge\", \"PhantomJS\", \"Safari\", \"SeaMonkey\", \"Silk\",\n     * \"Opera Mini\" and \"Opera\"\n     *\n     * Mobile versions of some browsers have \"Mobile\" appended to their name:\n     * eg. \"Chrome Mobile\", \"Firefox Mobile\", \"IE Mobile\" and \"Opera Mobile\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.name = name;\n    /**\n     * The alpha/beta release indicator.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.prerelease = prerelease;\n    /**\n     * The name of the product hosting the browser.\n     *\n     * The list of common products include:\n     *\n     * \"BlackBerry\", \"Galaxy S4\", \"Lumia\", \"iPad\", \"iPod\", \"iPhone\", \"Kindle\",\n     * \"Kindle Fire\", \"Nexus\", \"Nook\", \"PlayBook\", \"TouchPad\" and \"Transformer\"\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.product = product;\n    /**\n     * The browser's user agent string.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.ua = ua;\n    /**\n     * The browser/environment version.\n     *\n     * @memberOf platform\n     * @type string|null\n     */\n\n    platform.version = name && version;\n    /**\n     * The name of the operating system.\n     *\n     * @memberOf platform\n     * @type Object\n     */\n\n    platform.os = os || {\n      /**\n       * The CPU architecture the OS is built for.\n       *\n       * @memberOf platform.os\n       * @type number|null\n       */\n      'architecture': null,\n\n      /**\n       * The family of the OS.\n       *\n       * Common values include:\n       * \"Windows\", \"Windows Server 2008 R2 / 7\", \"Windows Server 2008 / Vista\",\n       * \"Windows XP\", \"OS X\", \"Ubuntu\", \"Debian\", \"Fedora\", \"Red Hat\", \"SuSE\",\n       * \"Android\", \"iOS\" and \"Windows Phone\"\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'family': null,\n\n      /**\n       * The version of the OS.\n       *\n       * @memberOf platform.os\n       * @type string|null\n       */\n      'version': null,\n\n      /**\n       * Returns the OS string.\n       *\n       * @memberOf platform.os\n       * @returns {string} The OS string.\n       */\n      'toString': function toString() {\n        return 'null';\n      }\n    };\n    platform.parse = parse;\n    platform.toString = toStringPlatform;\n\n    if (platform.version) {\n      description.unshift(version);\n    }\n\n    if (platform.name) {\n      description.unshift(name);\n    }\n\n    if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {\n      description.push(product ? '(' + os + ')' : 'on ' + os);\n    }\n\n    if (description.length) {\n      platform.description = description.join(' ');\n    }\n\n    return platform;\n  }\n  /*--------------------------------------------------------------------------*/\n  // Export platform.\n\n\n  var platform = parse(); // Some AMD build optimizers, like r.js, check for condition patterns like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose platform on the global object to prevent errors when platform is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    root.platform = platform; // Define as an anonymous module so platform can be aliased through path mapping.\n\n    define(function () {\n      return platform;\n    });\n  } // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n      // Export for CommonJS support.\n      forOwn(platform, function (value, key) {\n        freeExports[key] = value;\n      });\n    } else {\n      // Export to the global object.\n      root.platform = platform;\n    }\n}).call(this);","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfind from './internal/_xfind.js';\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","\"use strict\";\n/*\n\nUsage:\n\nvar ago = require('s-ago');\n\nvar now = new Date();\nvar yesterday = new Date(now - (24 * 60 * 60 * 1000));\nvar hoursAgo = new Date(now - (6 * 60 * 60 * 1000));\n\nago(now); // 'just now'\nago(yesterday); // 'yesterday'\nago(hoursAgo); // '6 hours ago'\n\n*/\n\nexports.__esModule = true;\n\nfunction format(diff, divisor, unit, prev) {\n  var val = Math.round(diff / divisor);\n  return val <= 1 ? prev : val + ' ' + unit + 's ago';\n}\n\nvar units = [{\n  max: 2760000,\n  value: 60000,\n  name: 'minute',\n  prev: 'a minute ago'\n}, {\n  max: 72000000,\n  value: 3600000,\n  name: 'hour',\n  prev: 'an hour ago'\n}, {\n  max: 518400000,\n  value: 86400000,\n  name: 'day',\n  prev: 'yesterday'\n}, {\n  max: 2419200000,\n  value: 604800000,\n  name: 'week',\n  prev: 'last week'\n}, {\n  max: 28512000000,\n  value: 2592000000,\n  name: 'month',\n  prev: 'last month' // max: 11 months\n\n}];\n\nfunction ago(date) {\n  var diff = Math.abs(Date.now() - date.getTime()); // less than a minute\n\n  if (diff < 60000) return 'just now';\n\n  for (var i = 0; i < units.length; i++) {\n    if (diff < units[i].max) {\n      return format(diff, units[i].value, units[i].name, units[i].prev);\n    }\n  } // `year` is the final unit.\n  // same as:\n  //  {\n  //    max: Infinity,\n  //    value: 31536000000,\n  //    name: 'year',\n  //    prev: 'last year'\n  //  }\n\n\n  return format(diff, 31536000000, 'year', 'last year');\n}\n\nexports[\"default\"] = ago;"],"sourceRoot":""}